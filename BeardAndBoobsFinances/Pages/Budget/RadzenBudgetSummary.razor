@*RAZDEN DATAGRID SUMMARY WITH DRILL THROUGH EXAMPLE*@

@page "/Budget/Summary"

@inject IBudgetDataSummary _db
@inject IBudgetSummaryColumns _db2
@inject IColumnXREF _db3

<h3>RadzenBudget</h3>

@if (budget is null || columns is null)
{
    <p><em>Loadin' mah BLAZOR w/RADZEN flava britches dynamically! in a moment ...</em></p>
}
else
{
    <RadzenDataGrid 
        Data="@budget" 
        TItem="BudgetSummaryModel" 
        AllowSorting="true" 
        AllowFiltering="true" 
        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
        FilterMode="FilterMode.Advanced"
        SelectionMode="DataGridSelectionMode.Single" 
        @bind-Value=@selectedBudgetItem
        >
        <EmptyTemplate>
            <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No records to display.</p>
        </EmptyTemplate>
        <Columns>
            @foreach(var columnData in columns)
               {
                  <RadzenDataGridColumn 
                    TItem="BudgetSummaryModel" 
                    Property=@columnData.Name 
                    Title=@columnData.DisplayName 
                    Visible=@columnData.Visible 
                    Filterable=@columnData.Filterable 
                    FormatString=@columnData.Formatting 
                    />
               }
        </Columns>
    </RadzenDataGrid>
}

@code {

    private IEnumerable<BudgetSummaryModel> budget;
    private IList<BudgetColumnsModel> columns;
    private IList<BudgetSummaryModel> selectedBudgetItem;
    private IEnumerable<ColumnXREF_Import> formatting;

    protected override async Task OnInitializedAsync()
    {
        budget = await _db.GetBudgetSummary();
        formatting = await _db3.GetColumnXREF();
        columns = _db2.GetColumnsAdvanced(formatting);        
        //columns = _db2.GetColumnsAdvanced();
    }
}